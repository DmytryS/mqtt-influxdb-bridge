{"version":3,"sources":["../../src/app.js"],"names":["appLogger","logger","getLogger","bridge","Bridge","connect","process","on","err","error","info","disconnect"],"mappings":";;AAAA;;AACA;;;;AAEA,MAAMA,SAAS,GAAGC,YAAOC,SAAP,CAAiB,QAAjB,CAAlB;;AAEA,MAAMC,MAAM,GAAG,IAAIC,eAAJ,EAAf;AAEAD,MAAM,CAACE,OAAP;AAEAC,OAAO,CAACC,EAAR,CAAW,mBAAX,EAAiCC,GAAD,IAAS;AACvCR,EAAAA,SAAS,CAACS,KAAV,CAAgB,qBAAhB,EAAuCD,GAAvC;AACD,CAFD;AAGAF,OAAO,CAACC,EAAR,CAAW,oBAAX,EAAkCC,GAAD,IAAS;AACxCR,EAAAA,SAAS,CAACS,KAAV,CAAgB,qBAAhB,EAAuCD,GAAvC;AACD,CAFD;AAGAF,OAAO,CAACC,EAAR,CAAW,SAAX,EAAsB,YAAY;AAChCP,EAAAA,SAAS,CAACU,IAAV,CAAe,6CAAf;AACA,QAAMP,MAAM,CAACQ,UAAP,EAAN;AACAX,EAAAA,SAAS,CAACU,IAAV,CAAe,kBAAf;AACD,CAJD","sourcesContent":["import Bridge from './bridge';\nimport { logger } from './lib';\n\nconst appLogger = logger.getLogger('Bridge');\n\nconst bridge = new Bridge();\n\nbridge.connect();\n\nprocess.on('uncaughtException', (err) => {\n  appLogger.error('Unhandled exception', err);\n});\nprocess.on('unhandledRejection', (err) => {\n  appLogger.error('Unhandled rejection', err);\n});\nprocess.on('SIGTERM', async () => {\n  appLogger.info('Received SIGTERM, going to shutdown server.');\n  await bridge.disconnect();\n  appLogger.info('Exited... Buy :)');\n});\n"],"file":"app.js"}